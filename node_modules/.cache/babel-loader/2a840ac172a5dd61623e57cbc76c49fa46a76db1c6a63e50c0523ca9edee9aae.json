{"ast":null,"code":"import axios from \"axios\";\nlet refresh = false;\naxios.interceptors.response.use(resp => resp, async error => {\n  if (error.response.status === 401 && !refresh) {\n    refresh = true;\n    const refreshToken = localStorage.getItem('refresh_token');\n    if (!refreshToken) {\n      console.log(\"No refresh token available\");\n      return Promise.reject(error);\n    }\n    try {\n      const response = await axios.post(\"http://localhost:8000/token/refresh/\", {\n        refresh: refreshToken\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${refreshToken}`\n        }\n      });\n      if (response.status === 200) {\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data[\"access\"]}`;\n        localStorage.setItem(\"access_token\", response.data.access);\n        localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n        // Retry the original request\n        return axios(error.config);\n      }\n    } catch (refreshError) {\n      console.error(\"Error refreshing token: \", refreshError);\n      return Promise.reject(error);\n    } finally {\n      refresh = false;\n    }\n  }\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"names":["axios","refresh","interceptors","response","use","resp","error","status","refreshToken","localStorage","getItem","console","log","Promise","reject","post","headers","defaults","common","data","setItem","access","config","refreshError"],"sources":["/home/lucie/Documents/PetMeetingV2/src/interceptor/axios.js"],"sourcesContent":["import axios from \"axios\";\n\nlet refresh = false;\n\naxios.interceptors.response.use(\n  resp => resp,\n  async (error) => {\n    if (error.response.status === 401 && !refresh) {\n      refresh = true;\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        console.log(\"No refresh token available\");\n        return Promise.reject(error);\n      }\n\n      try {\n        const response = await axios.post(\n          \"http://localhost:8000/token/refresh/\",\n          { refresh: refreshToken },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": `Bearer ${refreshToken}`,\n            }\n          }\n        );\n        if (response.status === 200) {\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data[\"access\"]}`;\n          localStorage.setItem(\"access_token\", response.data.access);\n          localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n          // Retry the original request\n          return axios(error.config);\n        }\n      } catch (refreshError) {\n        console.error(\"Error refreshing token: \", refreshError);\n        return Promise.reject(error);\n      } finally {\n        refresh = false;\n      }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,OAAO,GAAG,KAAK;AAEnBD,KAAK,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BC,IAAI,IAAIA,IAAI,EACZ,MAAOC,KAAK,IAAK;EACf,IAAIA,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAI,CAACN,OAAO,EAAE;IAC7CA,OAAO,GAAG,IAAI;IACd,MAAMO,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAI,CAACF,YAAY,EAAE;MACjBG,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;IAC9B;IAEA,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMH,KAAK,CAACe,IAAI,CAC/B,sCAAsC,EACtC;QAAEd,OAAO,EAAEO;MAAa,CAAC,EACzB;QACEQ,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASR,YAAa;QAC1C;MACF,CACF,CAAC;MACD,IAAIL,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3BP,KAAK,CAACiB,QAAQ,CAACD,OAAO,CAACE,MAAM,CAAC,eAAe,CAAC,GAAI,UAASf,QAAQ,CAACgB,IAAI,CAAC,QAAQ,CAAE,EAAC;QACpFV,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEjB,QAAQ,CAACgB,IAAI,CAACE,MAAM,CAAC;QAC1DZ,YAAY,CAACW,OAAO,CAAC,eAAe,EAAEjB,QAAQ,CAACgB,IAAI,CAAClB,OAAO,CAAC;;QAE5D;QACA,OAAOD,KAAK,CAACM,KAAK,CAACgB,MAAM,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOC,YAAY,EAAE;MACrBZ,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAEiB,YAAY,CAAC;MACvD,OAAOV,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;IAC9B,CAAC,SAAS;MACRL,OAAO,GAAG,KAAK;IACjB;EACF;EACA,OAAOY,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}