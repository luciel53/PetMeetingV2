{"ast":null,"code":"var _jsxFileName = \"/home/lucie/Documents/PetMeetingV2/src/pages/Membres.js\",\n  _s = $RefreshSig$();\nimport SearchMembers from \"../components/SearchMembers\";\nimport Grid from \"../components/Grid\";\nimport users from \"../components/Users\";\nimport cats from \"../components/Cats\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Members() {\n  _s();\n  const [profiles, setProfiles] = useState([]);\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n  const fetchProfiles = async () => {\n    try {\n      const reponse = await axios.get('http://127.0.0.1:8000/users/profile/');\n      setProfiles(reponse.data);\n      console.log(reponse.data);\n    } catch (e) {\n      console.error('Error fetching profiles', e);\n    }\n  };\n\n  // to get the username\n  const fetchUsername = async userId => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/users/${userId}/`);\n      return response.data.username;\n    } catch (e) {\n      console.error('Error fetching username', e);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const fetchUsernames = async () => {\n      const profilesWithUsernames = await Promise.all(profiles.map(async profile => {\n        const username = await fetchUsername(profile.user);\n        return {\n          ...profile,\n          username\n        };\n      }));\n      setProfiles(profilesWithUsernames);\n    };\n    fetchUsernames();\n  }, [profiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-32\",\n      children: /*#__PURE__*/_jsxDEV(SearchMembers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: profiles && profiles.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        items: profiles.map(profile => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"name: profile.user.username, image: profile.avatar, race: profile.location,\"\n        }, profile, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading profiles...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Members, \"RsX5oO9Ql1JxrkQLcgXtCeu/0x4=\");\n_c = Members;\nvar _c;\n$RefreshReg$(_c, \"Members\");","map":{"version":3,"names":["SearchMembers","Grid","users","cats","useState","useEffect","axios","jsxDEV","_jsxDEV","Members","_s","profiles","setProfiles","fetchProfiles","reponse","get","data","console","log","e","error","fetchUsername","userId","response","username","fetchUsernames","profilesWithUsernames","Promise","all","map","profile","user","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","items","_c","$RefreshReg$"],"sources":["/home/lucie/Documents/PetMeetingV2/src/pages/Membres.js"],"sourcesContent":["import SearchMembers from \"../components/SearchMembers\";\nimport Grid from \"../components/Grid\";\nimport users from \"../components/Users\";\nimport cats from \"../components/Cats\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function Members() {\n  const [profiles, setProfiles] = useState([]);\n\n  useEffect(() => {\n    fetchProfiles();\n  }, []);\n\n  const fetchProfiles = async () => {\n    try {\n      const reponse = await axios.get('http://127.0.0.1:8000/users/profile/');\n      setProfiles(reponse.data);\n      console.log(reponse.data);\n    } catch (e) {\n      console.error('Error fetching profiles', e);\n    }\n  }\n\n  // to get the username\n  const fetchUsername = async (userId) => {\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/users/${userId}/`);\n      return response.data.username;\n    } catch (e) {\n      console.error('Error fetching username', e);\n      return null;\n    }\n  }\n\n  useEffect(() => {\n    const fetchUsernames = async () => {\n      const profilesWithUsernames = await Promise.all(profiles.map(async (profile) => {\n        const username = await fetchUsername(profile.user);\n        return { ...profile, username };\n    }));\n    setProfiles(profilesWithUsernames);\n    };\n\n    fetchUsernames();\n  }, [profiles]);\n\n  return (\n    <div>\n      <div className=\"mt-32\">\n        <SearchMembers />\n      </div>\n      <div>\n        {profiles && profiles.length > 0 ? (\n          <Grid items={profiles.map(profile => (\n            <div key={profile}>\n\n            name: profile.user.username,\n            image: profile.avatar,\n            race: profile.location,\n            </div>\n          ))} />\n        ) : ( <p>Loading profiles...</p> )\n          }\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}