{"ast":null,"code":"import axios from \"axios\";\nlet refresh = false;\naxios.interceptors.response.use(resp => resp, async error => {\n  if (error.response.status === 401 && !refresh) {\n    refresh = true;\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        const response = await axios.post(\"http://localhost:8000/token/refresh/\", {\n          refresh: refreshToken\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.status === 200) {\n          axios.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data[\"access\"]}`;\n          localStorage.setItem(\"access_token\", response.data.access);\n          localStorage.setItem(\"refresh_token\", response.data.refresh);\n          return axios(error.config);\n        }\n      } else {\n        // Clear localStorage and redirect to login page\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        // Redirect to login page or handle the unauthorized access\n      }\n    } catch (refreshError) {\n      // Handle refresh token request error\n      console.error(\"Error refreshing token: \", refreshError);\n      // Clear localStorage and redirect to login page\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      // Redirect to login page or handle the unauthorized access\n    } finally {\n      refresh = false;\n    }\n  }\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"names":["axios","refresh","interceptors","response","use","resp","error","status","refreshToken","localStorage","getItem","post","headers","defaults","common","data","setItem","access","config","removeItem","refreshError","console","Promise","reject"],"sources":["/home/lucie/Documents/PetMeetingV2/src/interceptor/axios.js"],"sourcesContent":["import axios from \"axios\";\n\nlet refresh = false;\n\naxios.interceptors.response.use(\n  resp => resp,\n  async (error) => {\n    if (error.response.status === 401 && !refresh) {\n        refresh = true;\n        try {\n          const refreshToken = localStorage.getItem('refresh_token');\n          if (refreshToken) {\n            const response = await axios.post(\n              \"http://localhost:8000/token/refresh/\",\n              { refresh: refreshToken },\n              { headers: { \"Content-Type\": \"application/json\" } }\n            );\n            if (response.status === 200) {\n              axios.defaults.headers.common[\n                \"Authorization\"\n              ] = `Bearer ${response.data[\"access\"]}`;\n              localStorage.setItem(\"access_token\", response.data.access);\n              localStorage.setItem(\"refresh_token\", response.data.refresh);\n              return axios(error.config);\n            }\n          } else {\n            // Clear localStorage and redirect to login page\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('refresh_token');\n            // Redirect to login page or handle the unauthorized access\n          }\n        } catch (refreshError) {\n          // Handle refresh token request error\n          console.error(\"Error refreshing token: \", refreshError);\n          // Clear localStorage and redirect to login page\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          // Redirect to login page or handle the unauthorized access\n        } finally {\n          refresh = false;\n        }\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,OAAO,GAAG,KAAK;AAEnBD,KAAK,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BC,IAAI,IAAIA,IAAI,EACZ,MAAOC,KAAK,IAAK;EACf,IAAIA,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAI,CAACN,OAAO,EAAE;IAC3CA,OAAO,GAAG,IAAI;IACd,IAAI;MACF,MAAMO,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MAC1D,IAAIF,YAAY,EAAE;QAChB,MAAML,QAAQ,GAAG,MAAMH,KAAK,CAACW,IAAI,CAC/B,sCAAsC,EACtC;UAAEV,OAAO,EAAEO;QAAa,CAAC,EACzB;UAAEI,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAAE,CACpD,CAAC;QACD,IAAIT,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UAC3BP,KAAK,CAACa,QAAQ,CAACD,OAAO,CAACE,MAAM,CAC3B,eAAe,CAChB,GAAI,UAASX,QAAQ,CAACY,IAAI,CAAC,QAAQ,CAAE,EAAC;UACvCN,YAAY,CAACO,OAAO,CAAC,cAAc,EAAEb,QAAQ,CAACY,IAAI,CAACE,MAAM,CAAC;UAC1DR,YAAY,CAACO,OAAO,CAAC,eAAe,EAAEb,QAAQ,CAACY,IAAI,CAACd,OAAO,CAAC;UAC5D,OAAOD,KAAK,CAACM,KAAK,CAACY,MAAM,CAAC;QAC5B;MACF,CAAC,MAAM;QACL;QACAT,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;QACvCV,YAAY,CAACU,UAAU,CAAC,eAAe,CAAC;QACxC;MACF;IACF,CAAC,CAAC,OAAOC,YAAY,EAAE;MACrB;MACAC,OAAO,CAACf,KAAK,CAAC,0BAA0B,EAAEc,YAAY,CAAC;MACvD;MACAX,YAAY,CAACU,UAAU,CAAC,cAAc,CAAC;MACvCV,YAAY,CAACU,UAAU,CAAC,eAAe,CAAC;MACxC;IACF,CAAC,SAAS;MACRlB,OAAO,GAAG,KAAK;IACjB;EACJ;EACA,OAAOqB,OAAO,CAACC,MAAM,CAACjB,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}